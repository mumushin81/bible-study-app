import { test, expect } from '@playwright/test';

/**
 * Ï∞ΩÏÑ∏Í∏∞ Ï†ÑÏ≤¥ 50Ïû• ÎÑ§ÎπÑÍ≤åÏù¥ÏÖò ÌÖåÏä§Ìä∏
 *
 * Î™©Ï†Å:
 * - Î™®Îì† Ï±ïÌÑ∞Í∞Ä UIÏóêÏÑú Ï†ëÍ∑º Í∞ÄÎä•ÌïúÏßÄ ÌôïÏù∏
 * - Í∞Å Ï±ïÌÑ∞Ïùò Îç∞Ïù¥ÌÑ∞Í∞Ä DBÏóêÏÑú Ï†ïÏÉÅÏ†ÅÏúºÎ°ú Î°úÎìúÎêòÎäîÏßÄ ÌôïÏù∏
 * - Quick jump Í∏∞Îä• ÌÖåÏä§Ìä∏
 * - Ï±ïÌÑ∞ Ï†ÑÌôò Ïãú Îç∞Ïù¥ÌÑ∞Í∞Ä Ïò¨Î∞îÎ•¥Í≤å ÌëúÏãúÎêòÎäîÏßÄ ÌôïÏù∏
 */

test.describe('Ï∞ΩÏÑ∏Í∏∞ 50Ïû• ÎÑ§ÎπÑÍ≤åÏù¥ÏÖò ÌÖåÏä§Ìä∏', () => {

  test.beforeEach(async ({ page }) => {
    await page.goto('http://localhost:5177');
    // ÌéòÏù¥ÏßÄ Î°úÎìú ÎåÄÍ∏∞
    await page.waitForLoadState('networkidle');
  });

  test('Î™®Îì† 50Í∞ú Ï±ïÌÑ∞ Î≤ÑÌäºÏù¥ ÌëúÏãúÎêòÎäîÏßÄ ÌôïÏù∏', async ({ page }) => {
    // Î∂Å ÏÑ†ÌÉù Î≤ÑÌäº ÌÅ¥Î¶≠
    await page.click('button:has-text("Ï∞ΩÏÑ∏Í∏∞ 1Ïû•")');

    // Î∞îÌÖÄÏãúÌä∏ Î°úÎìú ÎåÄÍ∏∞
    await page.waitForSelector('text=ÏÑ±Í≤Ω ÏÑ†ÌÉù', { timeout: 5000 });

    // Ï∞ΩÏÑ∏Í∏∞ Ï±Ö Î≤ÑÌäº ÌÅ¥Î¶≠ - Ïä§ÌÅ¨Î°§ ÌõÑ ÌÅ¥Î¶≠
    const genesisButton = page.locator('.grid button').filter({ hasText: 'Ï∞ΩÏÑ∏Í∏∞' }).first();
    await genesisButton.scrollIntoViewIfNeeded();
    await genesisButton.click({ force: true });

    // Ï±ïÌÑ∞ ÏÑ†ÌÉù ÌôîÎ©¥ ÎåÄÍ∏∞
    await page.waitForSelector('text=Ï∞ΩÏÑ∏Í∏∞ (50Ïû•)', { timeout: 5000 });

    // Quick jump Î≤ÑÌäº ÌôïÏù∏ (1-10, 11-20, 21-30, 31-40, 41-50)
    await expect(page.locator('text=1-10')).toBeVisible();
    await expect(page.locator('text=11-20')).toBeVisible();
    await expect(page.locator('text=21-30')).toBeVisible();
    await expect(page.locator('text=31-40')).toBeVisible();
    await expect(page.locator('text=41-50')).toBeVisible();

    // Î™®Îì† Ï±ïÌÑ∞ Î≤ÑÌäº Ïπ¥Ïö¥Ìä∏ ÌôïÏù∏
    const chapterButtons = page.locator('button[id^="chapter-"]');
    await expect(chapterButtons).toHaveCount(50);

    console.log('‚úÖ Î™®Îì† 50Í∞ú Ï±ïÌÑ∞ Î≤ÑÌäº ÌôïÏù∏ ÏôÑÎ£å');
  });

  test('ÏÉòÌîå Ï±ïÌÑ∞ Îç∞Ïù¥ÌÑ∞ Î°úÎî© ÌÖåÏä§Ìä∏ (1, 25, 50Ïû•)', async ({ page }) => {
    const testChapters = [
      { chapter: 1, expectedRef: 'Genesis 1:1' },
      { chapter: 25, expectedRef: 'Genesis 25:1' },
      { chapter: 50, expectedRef: 'Genesis 50:1' }
    ];

    for (const { chapter, expectedRef } of testChapters) {
      console.log(`\nüìñ Ï±ïÌÑ∞ ${chapter} ÌÖåÏä§Ìä∏ Ï§ë...`);

      // ÌéòÏù¥ÏßÄ ÏÉÅÎã®ÏúºÎ°ú Ïä§ÌÅ¨Î°§ (Ìó§Îçî Î≤ÑÌäºÏù¥ Î≥¥Ïù¥ÎèÑÎ°ù)
      await page.evaluate(() => window.scrollTo({ top: 0, behavior: 'instant' }));
      await page.waitForTimeout(500);

      // Î∂Å ÏÑ†ÌÉù Î≤ÑÌäº ÌÅ¥Î¶≠ (Ï±ïÌÑ∞ Î≤àÌò∏Ïóê Í¥ÄÍ≥ÑÏóÜÏù¥ Ï∞ΩÏÑ∏Í∏∞ Î≤ÑÌäº ÏÑ†ÌÉù)
      await page.click('button:has-text("Ï∞ΩÏÑ∏Í∏∞"):has-text("Ïû•")');
      await page.waitForSelector('text=ÏÑ±Í≤Ω ÏÑ†ÌÉù', { timeout: 5000 });

      // Ï∞ΩÏÑ∏Í∏∞ ÌÅ¥Î¶≠
      const genesisButton = page.locator('.grid button').filter({ hasText: 'Ï∞ΩÏÑ∏Í∏∞' }).first();
      await genesisButton.scrollIntoViewIfNeeded();
      await genesisButton.click({ force: true });
      await page.waitForSelector('text=Ï∞ΩÏÑ∏Í∏∞ (50Ïû•)', { timeout: 5000 });

      // Ï±ïÌÑ∞ Î≤ÑÌäº ÌÅ¥Î¶≠
      await page.click(`button[id="chapter-${chapter}"]`);

      // Î∞îÌÖÄÏãúÌä∏ Îã´Ìûò ÎåÄÍ∏∞
      await page.waitForSelector('text=ÏÑ±Í≤Ω ÏÑ†ÌÉù', { state: 'hidden', timeout: 5000 });

      // Íµ¨Ï†à Ï∞∏Ï°∞ ÌôïÏù∏
      await page.waitForSelector(`text=${expectedRef}`, { timeout: 10000 });

      // ÌûàÎ∏åÎ¶¨Ïñ¥ ÌÖçÏä§Ìä∏ Î°úÎìú ÌôïÏù∏ (Îπà Î¨∏ÏûêÏó¥Ïù¥ ÏïÑÎãåÏßÄ)
      const hebrewText = await page.locator('[dir="rtl"]').first().textContent();
      expect(hebrewText).toBeTruthy();
      expect(hebrewText!.length).toBeGreaterThan(0);

      // [TODO] ÌÖçÏä§Ìä∏Í∞Ä ÏïÑÎãå Ïã§Ï†ú Ïª®ÌÖêÏ∏† ÌôïÏù∏
      const isTodoContent = hebrewText!.includes('[TODO');
      if (isTodoContent) {
        console.log(`   ‚ö†Ô∏è  Ï±ïÌÑ∞ ${chapter}: ÌïúÍ∏Ä Ïª®ÌÖêÏ∏† TODO ÏÉÅÌÉú`);
      } else {
        console.log(`   ‚úÖ Ï±ïÌÑ∞ ${chapter}: Îç∞Ïù¥ÌÑ∞ Î°úÎìú ÏôÑÎ£å`);
      }

      // ÌòÑÎåÄÏñ¥ ÏùòÏó≠ ÌôïÏù∏
      const modernText = await page.locator('text=‚ú® ÌòÑÎåÄÏñ¥ ÏùòÏó≠').locator('..').locator('p').textContent();
      expect(modernText).toBeTruthy();

      console.log(`   Hebrew: ${hebrewText!.substring(0, 30)}...`);
      console.log(`   Modern: ${modernText!.substring(0, 50)}...`);
    }
  });

  test('Quick Jump Í∏∞Îä• ÌÖåÏä§Ìä∏', async ({ page }) => {
    // Î∂Å ÏÑ†ÌÉù Î≤ÑÌäº ÌÅ¥Î¶≠
    await page.click('button:has-text("Ï∞ΩÏÑ∏Í∏∞ 1Ïû•")');
    await page.waitForSelector('text=ÏÑ±Í≤Ω ÏÑ†ÌÉù', { timeout: 5000 });

    // Ï∞ΩÏÑ∏Í∏∞ ÌÅ¥Î¶≠
    const genesisButton = page.locator('.grid button').filter({ hasText: 'Ï∞ΩÏÑ∏Í∏∞' }).first();
    await genesisButton.scrollIntoViewIfNeeded();
    await genesisButton.click({ force: true });
    await page.waitForSelector('text=Ï∞ΩÏÑ∏Í∏∞ (50Ïû•)', { timeout: 5000 });

    // "41-50" quick jump Î≤ÑÌäº ÌÅ¥Î¶≠
    await page.click('text=41-50');

    // Ï±ïÌÑ∞ 41 Î≤ÑÌäºÏù¥ ÌôîÎ©¥Ïóê Î≥¥Ïù¥ÎäîÏßÄ ÌôïÏù∏ (Ïä§ÌÅ¨Î°§Îê®)
    await expect(page.locator('button[id="chapter-41"]')).toBeInViewport();

    // Ï±ïÌÑ∞ 50 ÏÑ†ÌÉù
    await page.click('button[id="chapter-50"]');

    // Î∞îÌÖÄÏãúÌä∏ Îã´Ìûò ÎåÄÍ∏∞
    await page.waitForSelector('text=ÏÑ±Í≤Ω ÏÑ†ÌÉù', { state: 'hidden', timeout: 5000 });

    // Genesis 50:1 ÌôïÏù∏
    await page.waitForSelector('text=Genesis 50:1', { timeout: 10000 });

    console.log('‚úÖ Quick Jump Í∏∞Îä• Ï†ïÏÉÅ ÏûëÎèô');
  });

  test('Ï±ïÌÑ∞ Ï†ÑÌôò Ïãú Íµ¨Ï†à Ïù∏Îç±Ïä§ Î¶¨ÏÖã ÌôïÏù∏', async ({ page }) => {
    // 1Ïû•ÏúºÎ°ú ÏãúÏûë
    await page.waitForSelector('text=Genesis 1:1', { timeout: 10000 });

    // Îã§Ïùå Íµ¨Ï†àÎ°ú Ïù¥Îèô (1:2)
    await page.click('button:has-text("Îã§Ïùå")');
    await page.waitForSelector('text=Genesis 1:2', { timeout: 5000 });

    // Î∂Å ÏÑ†ÌÉùÌïòÏó¨ 2Ïû•ÏúºÎ°ú Ï†ÑÌôò
    await page.click('button:has-text("Ï∞ΩÏÑ∏Í∏∞ 1Ïû•")');
    await page.waitForSelector('text=ÏÑ±Í≤Ω ÏÑ†ÌÉù', { timeout: 5000 });
    const genesisButton = page.locator('.grid button').filter({ hasText: 'Ï∞ΩÏÑ∏Í∏∞' }).first();
    await genesisButton.scrollIntoViewIfNeeded();
    await genesisButton.click({ force: true });
    await page.waitForSelector('text=Ï∞ΩÏÑ∏Í∏∞ (50Ïû•)', { timeout: 5000 });
    await page.click('button[id="chapter-2"]');
    await page.waitForSelector('text=ÏÑ±Í≤Ω ÏÑ†ÌÉù', { state: 'hidden', timeout: 5000 });

    // 2:1Î°ú Î¶¨ÏÖãÎêòÏóàÎäîÏßÄ ÌôïÏù∏ (2:2Í∞Ä ÏïÑÎãò)
    await page.waitForSelector('text=Genesis 2:1', { timeout: 10000 });

    console.log('‚úÖ Ï±ïÌÑ∞ Ï†ÑÌôò Ïãú Íµ¨Ï†à Ïù∏Îç±Ïä§ Î¶¨ÏÖã ÌôïÏù∏');
  });

  test('Íµ¨Ï†à ÎÑ§ÎπÑÍ≤åÏù¥ÏÖò (Ïù¥Ï†Ñ/Îã§Ïùå) ÌÖåÏä§Ìä∏', async ({ page }) => {
    // Genesis 1:1ÏóêÏÑú ÏãúÏûë
    await page.waitForSelector('text=Genesis 1:1', { timeout: 10000 });

    // Ïù¥Ï†Ñ Î≤ÑÌäºÏù¥ ÎπÑÌôúÏÑ±ÌôîÎêòÏñ¥ ÏûàÎäîÏßÄ ÌôïÏù∏ (Ï≤´ Íµ¨Ï†àÏù¥ÎØÄÎ°ú)
    const prevButton = page.locator('button[aria-label="Ïù¥Ï†Ñ Íµ¨Ï†à"]');
    await expect(prevButton).toBeDisabled();

    // Îã§Ïùå Î≤ÑÌäº ÌÅ¥Î¶≠
    const nextButton = page.locator('button[aria-label="Îã§Ïùå Íµ¨Ï†à"]');
    await nextButton.click();
    await page.waitForSelector('text=Genesis 1:2', { timeout: 5000 });

    // Ïù¥Ï†Ñ Î≤ÑÌäºÏù¥ ÌôúÏÑ±ÌôîÎêòÏóàÎäîÏßÄ ÌôïÏù∏
    await expect(prevButton).toBeEnabled();

    // Ïù¥Ï†Ñ Î≤ÑÌäºÏúºÎ°ú Îã§Ïãú 1:1Î°ú Ïù¥Îèô
    await prevButton.click();
    await page.waitForSelector('text=Genesis 1:1', { timeout: 5000 });

    console.log('‚úÖ Íµ¨Ï†à ÎÑ§ÎπÑÍ≤åÏù¥ÏÖò Ï†ïÏÉÅ ÏûëÎèô');
  });

  test('Ìó§Îçî ÌëúÏãú Ï†ïÎ≥¥ ÌôïÏù∏', async ({ page }) => {
    // 1Ïû•ÏúºÎ°ú ÏãúÏûë
    await page.waitForSelector('text=Genesis 1:1', { timeout: 10000 });

    // Ìó§ÎçîÏóê "Ï∞ΩÏÑ∏Í∏∞ 1Ïû• 1/31Ï†à" ÌòïÌÉúÎ°ú ÌëúÏãúÎêòÎäîÏßÄ ÌôïÏù∏
    const headerText = await page.locator('button:has-text("Ï∞ΩÏÑ∏Í∏∞ 1Ïû•")').textContent();

    expect(headerText).toContain('Ï∞ΩÏÑ∏Í∏∞');
    expect(headerText).toContain('1Ïû•');
    expect(headerText).toMatch(/\d+\/\d+Ï†à/); // "1/31Ï†à" Í∞ôÏùÄ ÌòïÌÉú

    console.log(`‚úÖ Ìó§Îçî ÌëúÏãú: ${headerText}`);
  });

  test('Îç∞Ïù¥ÌÑ∞ ÏôÑÏÑ±ÎèÑ Î∂ÑÏÑù - 50Í∞ú Ï±ïÌÑ∞', async ({ page }) => {
    console.log('\nüìä Ï∞ΩÏÑ∏Í∏∞ Ï†ÑÏ≤¥ Îç∞Ïù¥ÌÑ∞ ÏôÑÏÑ±ÎèÑ Î∂ÑÏÑù ÏãúÏûë...\n');

    const stats = {
      totalChapters: 0,
      chaptersWithData: 0,
      chaptersWithKorean: 0,
      chaptersWithTodo: 0,
    };

    // ÏÉòÌîåÎßÅ: 1, 10, 20, 30, 40, 50Ïû• ÌÖåÏä§Ìä∏
    const sampleChapters = [1, 10, 20, 30, 40, 50];

    for (const chapter of sampleChapters) {
      stats.totalChapters++;

      // ÌéòÏù¥ÏßÄ ÏÉÅÎã®ÏúºÎ°ú Ïä§ÌÅ¨Î°§ (Ìó§Îçî Î≤ÑÌäºÏù¥ Î≥¥Ïù¥ÎèÑÎ°ù)
      await page.evaluate(() => window.scrollTo({ top: 0, behavior: 'instant' }));
      await page.waitForTimeout(500);

      // Î∂Å ÏÑ†ÌÉù (Ï±ïÌÑ∞ Î≤àÌò∏Ïóê Í¥ÄÍ≥ÑÏóÜÏù¥ Ï∞ΩÏÑ∏Í∏∞ Î≤ÑÌäº ÏÑ†ÌÉù)
      await page.click('button:has-text("Ï∞ΩÏÑ∏Í∏∞"):has-text("Ïû•")');
      await page.waitForSelector('text=ÏÑ±Í≤Ω ÏÑ†ÌÉù', { timeout: 5000 });
      const genesisButton = page.locator('.grid button').filter({ hasText: 'Ï∞ΩÏÑ∏Í∏∞' }).first();
      await genesisButton.scrollIntoViewIfNeeded();
      await genesisButton.click({ force: true });
      await page.waitForSelector('text=Ï∞ΩÏÑ∏Í∏∞ (50Ïû•)', { timeout: 5000 });

      // Ï±ïÌÑ∞ ÏÑ†ÌÉù
      await page.click(`button[id="chapter-${chapter}"]`);
      await page.waitForSelector('text=ÏÑ±Í≤Ω ÏÑ†ÌÉù', { state: 'hidden', timeout: 5000 });
      await page.waitForSelector(`text=Genesis ${chapter}:1`, { timeout: 10000 });

      // Îç∞Ïù¥ÌÑ∞ Î°úÎìú ÌôïÏù∏
      const hebrewText = await page.locator('[dir="rtl"]').first().textContent();
      const modernText = await page.locator('text=‚ú® ÌòÑÎåÄÏñ¥ ÏùòÏó≠').locator('..').locator('p').textContent();

      if (hebrewText && hebrewText.length > 0) {
        stats.chaptersWithData++;
      }

      if (modernText && !modernText.includes('[TODO')) {
        stats.chaptersWithKorean++;
      } else {
        stats.chaptersWithTodo++;
      }

      console.log(`   Chapter ${chapter}: ${modernText!.includes('[TODO') ? '‚ö†Ô∏è  TODO' : '‚úÖ Korean'}`);
    }

    console.log('\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ');
    console.log('üìä ÏÉòÌîåÎßÅ Í≤∞Í≥º (6Í∞ú Ï±ïÌÑ∞):');
    console.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ');
    console.log(`Ï¥ù ÏÉòÌîå: ${stats.totalChapters}Í∞ú Ï±ïÌÑ∞`);
    console.log(`Îç∞Ïù¥ÌÑ∞ Î°úÎìú: ${stats.chaptersWithData}/${stats.totalChapters} (${(stats.chaptersWithData/stats.totalChapters*100).toFixed(1)}%)`);
    console.log(`ÌïúÍ∏Ä Ïª®ÌÖêÏ∏†: ${stats.chaptersWithKorean}/${stats.totalChapters} (${(stats.chaptersWithKorean/stats.totalChapters*100).toFixed(1)}%)`);
    console.log(`TODO ÏÉÅÌÉú: ${stats.chaptersWithTodo}/${stats.totalChapters} (${(stats.chaptersWithTodo/stats.totalChapters*100).toFixed(1)}%)`);
    console.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n');
  });
});
